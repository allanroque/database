---
- name: Gerenciamento de Bancos de Dados PostgreSQL
  hosts: db_servers
  become: true
  gather_facts: true

  vars:
    # Configurações padrão
    pg_user: "postgres"
    pg_port: "{{ pg_port | default(5432) }}"
    
    # Configurações de template
    default_template: "template0"
    default_encoding: "UTF8"
    default_locale: "en_US.UTF-8"
    default_collate: "en_US.UTF-8"
    default_ctype: "en_US.UTF-8"
    
    # Lista de bancos de dados a serem criados/gerenciados
    db_databases:
      - name: "app1"
        owner: "postgres"
        template: "template0"
        encoding: "UTF8"
        locale: "en_US.UTF-8"
        collate: "en_US.UTF-8"
        ctype: "en_US.UTF-8"
        tablespace: ""
        connection_limit: -1
        comment: "Banco de dados da aplicação principal"
        schemas:
          - name: "public"
            owner: "postgres"
          - name: "app"
            owner: "postgres"
        extensions:
          - "uuid-ossp"
          - "pgcrypto"
        
      - name: "app2"
        owner: "postgres"
        template: "template0"
        encoding: "UTF8"
        locale: "en_US.UTF-8"
        collate: "en_US.UTF-8"
        ctype: "en_US.UTF-8"
        tablespace: ""
        connection_limit: -1
        comment: "Banco de dados da aplicação secundária"
        schemas:
          - name: "public"
            owner: "postgres"
        extensions:
          - "uuid-ossp"
        
      - name: "financeiro"
        owner: "postgres"
        template: "template0"
        encoding: "UTF8"
        locale: "en_US.UTF-8"
        collate: "en_US.UTF-8"
        ctype: "en_US.UTF-8"
        tablespace: ""
        connection_limit: 50
        comment: "Banco de dados financeiro"
        schemas:
          - name: "public"
            owner: "postgres"
          - name: "finance"
            owner: "postgres"
        extensions:
          - "uuid-ossp"
          - "pgcrypto"
        
      - name: "rh"
        owner: "postgres"
        template: "template0"
        encoding: "UTF8"
        locale: "en_US.UTF-8"
        collate: "en_US.UTF-8"
        ctype: "en_US.UTF-8"
        tablespace: ""
        connection_limit: 30
        comment: "Banco de dados de recursos humanos"
        schemas:
          - name: "public"
            owner: "postgres"
          - name: "rh"
            owner: "postgres"
        extensions:
          - "uuid-ossp"

  pre_tasks:
    - name: Validar configurações de bancos
      ansible.builtin.assert:
        that:
          - item.name is defined
          - item.owner is defined
          - item.template is defined
        fail_msg: "Configuração inválida para banco {{ item.name }}"
      loop: "{{ db_databases }}"

    - name: Verificar conectividade com PostgreSQL
      become_user: "{{ pg_user }}"
      ansible.builtin.command: psql -tAc "SELECT 1;"
      register: pg_connectivity
      failed_when: false

    - name: Falhar se PostgreSQL não estiver acessível
      ansible.builtin.fail:
        msg: "PostgreSQL não está acessível. Verifique se o serviço está rodando."
      when: pg_connectivity.rc != 0

  tasks:
    - name: Coletar bancos existentes
      become_user: "{{ pg_user }}"
      ansible.builtin.command: >
        psql -tAc "SELECT datname FROM pg_database WHERE datistemplate = false;"
      register: existing_databases
      changed_when: false

    - name: Processar cada banco de dados
      ansible.builtin.include_tasks: tasks/manage_single_database.yml
      loop: "{{ db_databases }}"
      loop_control:
        loop_var: current_db

  post_tasks:
    - name: Verificar bancos criados
      become_user: "{{ pg_user }}"
      ansible.builtin.command: >
        psql -tAc "SELECT datname, pg_size_pretty(pg_database_size(datname)), 
                          pg_catalog.pg_get_userbyid(datdba) as owner
                   FROM pg_database 
                   WHERE datistemplate = false 
                   ORDER BY datname;"
      register: final_databases_check
      changed_when: false

    - name: Exibir resumo dos bancos
      ansible.builtin.debug:
        msg: |
          Bancos de Dados PostgreSQL:
          {{ final_databases_check.stdout_lines | join('\n') }}

  handlers:
    - name: reload postgresql
      ansible.builtin.systemd:
        name: postgresql
        state: reloaded
