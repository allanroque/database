---
all:
  children:
    db_servers:
      hosts:
        db-server-01:
          ansible_host: 192.168.1.10
          ansible_user: ansible
          ansible_become: true
          ansible_become_method: sudo
          pg_version: "15"
          pg_port: 5432
          pg_data_dir: "/var/lib/pgsql/data"
          
        db-server-02:
          ansible_host: 192.168.1.11
          ansible_user: ansible
          ansible_become: true
          ansible_become_method: sudo
          pg_version: "15"
          pg_port: 5432
          pg_data_dir: "/var/lib/pgsql/data"
          
        db-server-03:
          ansible_host: 192.168.1.12
          ansible_user: ansible
          ansible_become: true
          ansible_become_method: sudo
          pg_version: "15"
          pg_port: 5432
          pg_data_dir: "/var/lib/pgsql/data"
      
      vars:
        # Variáveis comuns para todos os servidores de banco
        pg_user: "postgres"
        pg_ssl_enabled: true
        pg_allow_remote_connections: false
        pg_allowed_networks:
          - "127.0.0.1/32"
          - "192.168.1.0/24"
        
        # Configurações de monitoramento
        monitoring_enabled: true
        alert_email: "dba@company.com"
        
        # Configurações de backup
        backup_dir: "/var/backups/postgresql"
        backup_retention_days: 30
        
        # Configurações do ServiceNow
        snow_instance: "https://your-instance.service-now.com"
        snow_username: "ansible_user"
        change_impact: "low"
        change_urgency: "low"
        change_category: "database"
    
    db_primary:
      hosts:
        db-server-01:
      vars:
        pg_role: "primary"
        pg_wal_level: "replica"
        pg_max_wal_senders: 10
        pg_wal_keep_segments: 64
    
    db_replicas:
      hosts:
        db-server-02:
        db-server-03:
      vars:
        pg_role: "replica"
        pg_hot_standby: true
    
    db_production:
      children:
        db_primary:
        db_replicas:
      vars:
        environment: "production"
        pg_max_connections: 200
        pg_shared_buffers: "2GB"
        pg_work_mem: "32MB"
        pg_maintenance_work_mem: "512MB"
        pg_effective_cache_size: "8GB"
        
        # Usuários específicos para produção
        db_users:
          - username: "app_prod_user"
            password: "{{ vault_app_prod_password }}"
            profile: "readwrite"
            databases: ["app1", "app2"]
            schemas: ["public", "app"]
            valid_until: "infinity"
            comment: "Usuário da aplicação em produção"
            
          - username: "readonly_prod_user"
            password: "{{ vault_readonly_prod_password }}"
            profile: "readonly"
            databases: ["app1", "app2", "financeiro"]
            schemas: ["public"]
            valid_until: "infinity"
            comment: "Usuário somente leitura em produção"
    
    db_staging:
      hosts:
        db-staging-01:
          ansible_host: 192.168.2.10
          ansible_user: ansible
          ansible_become: true
          ansible_become_method: sudo
      vars:
        environment: "staging"
        pg_max_connections: 100
        pg_shared_buffers: "1GB"
        pg_work_mem: "16MB"
        pg_maintenance_work_mem: "256MB"
        pg_effective_cache_size: "4GB"
        
        # Usuários específicos para staging
        db_users:
          - username: "app_staging_user"
            password: "{{ vault_app_staging_password }}"
            profile: "readwrite"
            databases: ["app1", "app2"]
            schemas: ["public", "app"]
            valid_until: "infinity"
            comment: "Usuário da aplicação em staging"
    
    db_development:
      hosts:
        db-dev-01:
          ansible_host: 192.168.3.10
          ansible_user: ansible
          ansible_become: true
          ansible_become_method: sudo
      vars:
        environment: "development"
        pg_max_connections: 50
        pg_shared_buffers: "256MB"
        pg_work_mem: "8MB"
        pg_maintenance_work_mem: "128MB"
        pg_effective_cache_size: "1GB"
        
        # Usuários específicos para desenvolvimento
        db_users:
          - username: "app_dev_user"
            password: "{{ vault_app_dev_password }}"
            profile: "admin"
            databases: ["app1", "app2"]
            schemas: ["public", "app", "dev"]
            valid_until: "infinity"
            comment: "Usuário da aplicação em desenvolvimento"
